// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractMachServiceManager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBLSSignatureCheckerNonSignerStakesAndSignature is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerNonSignerStakesAndSignature struct {
	NonSignerQuorumBitmapIndices []uint32
	NonSignerPubkeys             []BN254G1Point
	QuorumApks                   []BN254G1Point
	ApkG2                        BN254G2Point
	Sigma                        BN254G1Point
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// IBLSSignatureCheckerQuorumStakeTotals is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerQuorumStakeTotals struct {
	SignedStakeForQuorum []*big.Int
	TotalStakeForQuorum  []*big.Int
}

// IMachServiceManagerAlertHeader is an auto generated low-level Go binding around an user-defined struct.
type IMachServiceManagerAlertHeader struct {
	L2BlockNumber              *big.Int
	QuorumNumbers              []byte
	QuorumThresholdPercentages []byte
	ReferenceBlockNumber       uint32
}

// ISignatureUtilsSignatureWithSaltAndExpiry is an auto generated low-level Go binding around an user-defined struct.
type ISignatureUtilsSignatureWithSaltAndExpiry struct {
	Signature []byte
	Salt      [32]byte
	Expiry    *big.Int
}

// ContractMachServiceManagerMetaData contains all meta data concerning the ContractMachServiceManager contract.
var ContractMachServiceManagerMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"__avsDirectory\",\"type\":\"address\",\"internalType\":\"contractIAVSDirectory\"},{\"name\":\"__registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"__stakeRegistry\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"THRESHOLD_DENOMINATOR\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"alertConfirmer\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"avsDirectory\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"blsApkRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIBLSApkRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"checkSignatures\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"referenceBlockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"params\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.QuorumStakeTotals\",\"components\":[{\"name\":\"signedStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"},{\"name\":\"totalStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]},{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"confirmAlert\",\"inputs\":[{\"name\":\"alertHeader\",\"type\":\"tuple\",\"internalType\":\"structIMachServiceManager.AlertHeader\",\"components\":[{\"name\":\"l2BlockNumber\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"quorumThresholdPercentages\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"referenceBlockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"nonSignerStakesAndSignature\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"contains\",\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"delegation\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIDelegationManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"deregisterOperatorFromAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getOperatorRestakedStrategies\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getRestakeableStrategies\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_pauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"},{\"name\":\"_initialPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_initialOwner\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_batchConfirmer\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"pauseAll\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pauserRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"queryBlockNumber\",\"inputs\":[{\"name\":\"start\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"querySize\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\",\"internalType\":\"uint256[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerOperatorToAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorSignature\",\"type\":\"tuple\",\"internalType\":\"structISignatureUtils.SignatureWithSaltAndExpiry\",\"components\":[{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"expiry\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"registryCoordinator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"removeAlert\",\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setMetadataURI\",\"inputs\":[{\"name\":\"_metadataURI\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setPauserRegistry\",\"inputs\":[{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setStaleStakesForbidden\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"stakeRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"staleStakesForbidden\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"totalAlerts\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"trySignatureAndApkVerification\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"apk\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[{\"name\":\"pairingSuccessful\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"siganatureIsValid\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"unpause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"AlertConfirmed\",\"inputs\":[{\"name\":\"alertHeaderHash\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"blockNumber\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"AlertConfirmerChanged\",\"inputs\":[{\"name\":\"previousAddress\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"},{\"name\":\"newAddress\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"AlertRemoved\",\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"},{\"name\":\"sender\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Paused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PauserRegistrySet\",\"inputs\":[{\"name\":\"pauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"},{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"StaleStakesForbiddenUpdate\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"indexed\":false,\"internalType\":\"bool\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Unpaused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"InvalidStartIndex\",\"inputs\":[]}]",
	Bin: "0x6101606040523480156200001257600080fd5b506040516200507e3803806200507e8339810160408190526200003591620002e7565b6001600160a01b0380841660c052808316608052811660a052818381836200005c620001ff565b5050506001600160a01b03811660e081905260408051636830483560e01b815290516368304835916004808201926020929091908290030181865afa158015620000aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d091906200033b565b6001600160a01b0316610100816001600160a01b031681525050806001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000129573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014f91906200033b565b6001600160a01b0316610120816001600160a01b031681525050610100516001600160a01b031663df5cf7236040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d191906200033b565b6001600160a01b031661014052506099805460ff19166001179055620001f6620001ff565b50505062000362565b600254600160a81b900460ff16156200026e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60025460ff600160a01b90910481161015620002cc576002805460ff60a01b191660ff60a01b17905560405160ff81527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b0381168114620002e457600080fd5b50565b600080600060608486031215620002fd57600080fd5b83516200030a81620002ce565b60208501519093506200031d81620002ce565b60408501519092506200033081620002ce565b809150509250925092565b6000602082840312156200034e57600080fd5b81516200035b81620002ce565b9392505050565b60805160a05160c05160e051610100516101205161014051614c2762000457600039600081816104820152611bf50152600081816103410152611dd801526000818161036801528181611fae01526121700152600081816103b501528181610ee4015281816118c001528181611a580152611c9201526000818161038c015281816124580152818161251a01526125ee015260008181610ac901528181610c2401528181610cbb015281816126f70152818161287a01526129190152600081816108f40152818161098301528181610a03015281816124c6015281816125920152818161263501526127d50152614c276000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636d14a9871161010f578063b98d0908116100a2578063ef02445811610071578063ef024458146104ac578063f0bb5a9b146104b4578063f2fde38b146104d4578063fabc1cbc146104e757600080fd5b8063b98d09081461045d578063c34052e01461046a578063df5cf7231461047d578063e481af9d146104a457600080fd5b8063886f1195116100de578063886f1195146104135780638da5cb5b146104265780639926ee7d14610437578063a364f4da1461044a57600080fd5b80636d14a987146103b05780636efb4636146103d7578063715018a6146103f8578063750521f51461040057600080fd5b80634f2b85db116101875780635c975abb116101565780635c975abb146103345780635df459461461033c57806368304835146103635780636b3aa72e1461038a57600080fd5b80634f2b85db146102d0578063595c6a67146102e65780635abd2abe146102ee5780635ac86ab71461030157600080fd5b806333cfb7b7116101c357806333cfb7b71461025f578063358394d81461027f57806339bc68e714610292578063416c7e5e146102bd57600080fd5b806310d67a2f146101f5578063136439dd1461020a57806313b162e91461021d578063171f1d5b14610230575b600080fd5b610208610203366004613d39565b6104fa565b005b610208610218366004613d56565b6105b6565b61020861022b366004613d56565b6106f5565b61024361023e366004613ec0565b610745565b6040805192151583529015156020830152015b60405180910390f35b61027261026d366004613d39565b6108cf565b6040516102569190613f11565b61020861028d366004613f5e565b610d9e565b6002546102a5906001600160a01b031681565b6040516001600160a01b039091168152602001610256565b6102086102cb366004613fbf565b610ee2565b6102d8611051565b604051908152602001610256565b610208611062565b6102086102fc366004614292565b611129565b61032461030f36600461430c565b60cc54600160ff9092169190911b9081161490565b6040519015158152602001610256565b60cc546102d8565b6102a57f000000000000000000000000000000000000000000000000000000000000000081565b6102a57f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006102a5565b6102a57f000000000000000000000000000000000000000000000000000000000000000081565b6103ea6103e5366004614329565b61150c565b60405161025692919061441c565b610208612425565b61020861040e3660046144bc565b612439565b60cb546102a5906001600160a01b031681565b6035546001600160a01b03166102a5565b61020861044536600461452c565b6124bb565b610208610458366004613d39565b612587565b6099546103249060ff1681565b610324610478366004613d56565b61261d565b6102a57f000000000000000000000000000000000000000000000000000000000000000081565b61027261262f565b6102d8606481565b6104c76104c23660046145d7565b6129f8565b60405161025691906145f9565b6102086104e2366004613d39565b612ae3565b6102086104f5366004613d56565b612b59565b60cb60009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561054d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105719190614631565b6001600160a01b0316336001600160a01b0316146105aa5760405162461bcd60e51b81526004016105a19061464e565b60405180910390fd5b6105b381612cb5565b50565b60cb5460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa1580156105fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106229190614698565b61063e5760405162461bcd60e51b81526004016105a1906146b5565b60cc54818116146106b75760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016105a1565b60cc81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b6106fd612dac565b610708600082612e06565b50604080518281523360208201527fdc6896c6a17d008fe8c0bae5706df7a5456ed682e92595cd405f05fc908e20a091015b60405180910390a150565b60008060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018787600001518860200151886000015160006002811061078d5761078d6146fd565b60200201518951600160200201518a602001516000600281106107b2576107b26146fd565b60200201518b602001516001600281106107ce576107ce6146fd565b602090810291909101518c518d83015160405161082b9a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b6040516020818303038152906040528051906020012060001c61084e9190614713565b90506108c16108676108608884612e19565b8690612eb0565b61086f612f44565b6108b76108a8856108a2604080518082018252600080825260209182015281518083019092526001825260029082015290565b90612e19565b6108b18c613004565b90612eb0565b886201d4c0613094565b909890975095505050505050565b6040516309aa152760e11b81526001600160a01b0382811660048301526060916000917f000000000000000000000000000000000000000000000000000000000000000016906313542a4e90602401602060405180830381865afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190614735565b60405163871ef04960e01b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063871ef04990602401602060405180830381865afa1580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee919061474e565b90506001600160c01b0381161580610a8857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a839190614777565b60ff16155b15610aa457505060408051600081526020810190915292915050565b6000610ab8826001600160c01b03166132b8565b90506000805b8251811015610b8e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ca5a5f5848381518110610b0857610b086146fd565b01602001516040516001600160e01b031960e084901b16815260f89190911c6004820152602401602060405180830381865afa158015610b4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b709190614735565b610b7a90836147aa565b915080610b86816147c2565b915050610abe565b506000816001600160401b03811115610ba957610ba9613d6f565b604051908082528060200260200182016040528015610bd2578160200160208202803683370190505b5090506000805b8451811015610d91576000858281518110610bf657610bf66146fd565b0160200151604051633ca5a5f560e01b815260f89190911c6004820181905291506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633ca5a5f590602401602060405180830381865afa158015610c6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8f9190614735565b905060005b81811015610d7b576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa158015610d09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2d91906147f4565b60000151868681518110610d4357610d436146fd565b6001600160a01b039092166020928302919091019091015284610d65816147c2565b9550508080610d73906147c2565b915050610c94565b5050508080610d89906147c2565b915050610bd9565b5090979650505050505050565b600254600160a81b900460ff1615808015610dc657506002546001600160a01b90910460ff16105b80610de75750303b158015610de75750600254600160a01b900460ff166001145b610e4a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105a1565b6002805460ff60a01b1916600160a01b1790558015610e77576002805460ff60a81b1916600160a81b1790555b610e81858561337a565b610e8a83613464565b610e93826134b6565b8015610edb576002805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f649190614631565b6001600160a01b0316336001600160a01b0316146110105760405162461bcd60e51b815260206004820152605c60248201527f424c535369676e6174757265436865636b65722e6f6e6c79436f6f7264696e6160448201527f746f724f776e65723a2063616c6c6572206973206e6f7420746865206f776e6560648201527f72206f6620746865207265676973747279436f6f7264696e61746f7200000000608482015260a4016105a1565b6099805460ff19168215159081179091556040519081527f40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc9060200161073a565b600061105d6000613517565b905090565b60cb5460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa1580156110aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ce9190614698565b6110ea5760405162461bcd60e51b81526004016105a1906146b5565b60001960cc81905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b60cc54600090600190811614156111825760405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e646578206973207061757365640000000000000060448201526064016105a1565b6002546001600160a01b031633146111f15760405162461bcd60e51b815260206004820152602c60248201527f6f6e6c79416c657274436f6e6669726d65723a206e6f742066726f6d20616c6560448201526b393a1031b7b73334b936b2b960a11b60648201526084016105a1565b32331461127d5760405162461bcd60e51b815260206004820152604e60248201527f4d616368536572766963654d616e616765722e636f6e6669726d416c6572743a60448201527f2068656164657220616e64206e6f6e7369676e65722064617461206d7573742060648201526d626520696e2063616c6c6461746160901b608482015260a4016105a1565b4361128e6080850160608601614833565b63ffffffff16111561131d5760405162461bcd60e51b815260206004820152604c60248201527f4d616368536572766963654d616e616765722e636f6e6669726d416c6572743a60448201527f20737065636966696564207265666572656e6365426c6f636b4e756d6265722060648201526b697320696e2066757475726560a01b608482015260a4016105a1565b600061133061132b8561484e565b613521565b905060008061135c8361134660208901896148ee565b61135660808b0160608c01614833565b8961150c565b9150915060005b61137060408801886148ee565b90508110156114c05761138660408801886148ee565b82818110611396576113966146fd565b9050013560f81c60f81b60f81c60ff16836020015182815181106113bc576113bc6146fd565b60200260200101516113ce919061493b565b6001600160601b03166064846000015183815181106113ef576113ef6146fd565b60200260200101516001600160601b031661140a919061496a565b10156114ae5760405162461bcd60e51b815260206004820152606160248201527f4d616368536572766963654d616e616765722e636f6e6669726d416c6572743a60448201527f207369676e61746f7269657320646f206e6f74206f776e206174206c6561737460648201527f207468726573686f6c642070657263656e74616765206f6620612071756f72756084820152606d60f81b60a482015260c4016105a1565b806114b8816147c2565b915050611363565b506114cd6000873561359b565b506040518635815283907fbcf10fb01198afab314eb9cd559cab7e42b0f5131712822bdc5118dfbb937fdd9060200160405180910390a2505050505050565b60408051808201909152606080825260208201526000846115835760405162461bcd60e51b81526020600482015260376024820152600080516020614bd283398151915260448201527f7265733a20656d7074792071756f72756d20696e70757400000000000000000060648201526084016105a1565b6040830151518514801561159b575060a08301515185145b80156115ab575060c08301515185145b80156115bb575060e08301515185145b6116255760405162461bcd60e51b81526020600482015260416024820152600080516020614bd283398151915260448201527f7265733a20696e7075742071756f72756d206c656e677468206d69736d6174636064820152600d60fb1b608482015260a4016105a1565b8251516020840151511461169d5760405162461bcd60e51b815260206004820152604460248201819052600080516020614bd2833981519152908201527f7265733a20696e707574206e6f6e7369676e6572206c656e677468206d69736d6064820152630c2e8c6d60e31b608482015260a4016105a1565b4363ffffffff168463ffffffff16111561170d5760405162461bcd60e51b815260206004820152603c6024820152600080516020614bd283398151915260448201527f7265733a20696e76616c6964207265666572656e636520626c6f636b0000000060648201526084016105a1565b6040805180820182526000808252602080830191909152825180840190935260608084529083015290866001600160401b0381111561174e5761174e613d6f565b604051908082528060200260200182016040528015611777578160200160208202803683370190505b506020820152866001600160401b0381111561179557611795613d6f565b6040519080825280602002602001820160405280156117be578160200160208202803683370190505b50815260408051808201909152606080825260208201528560200151516001600160401b038111156117f2576117f2613d6f565b60405190808252806020026020018201604052801561181b578160200160208202803683370190505b5081526020860151516001600160401b0381111561183b5761183b613d6f565b604051908082528060200260200182016040528015611864578160200160208202803683370190505b50816020018190525060006119368a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060408051639aa1653d60e01b815290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350639aa1653d925060048083019260209291908290030181865afa15801561190d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119319190614777565b6135a7565b905060005b876020015151811015611bd15761198088602001518281518110611961576119616146fd565b6020026020010151805160009081526020918201519091526040902090565b83602001518281518110611996576119966146fd565b60209081029190910101528015611a565760208301516119b7600183614989565b815181106119c7576119c76146fd565b602002602001015160001c836020015182815181106119e8576119e86146fd565b602002602001015160001c11611a56576040805162461bcd60e51b8152602060048201526024810191909152600080516020614bd283398151915260448201527f7265733a206e6f6e5369676e65725075626b657973206e6f7420736f7274656460648201526084016105a1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166304ec635184602001518381518110611a9b57611a9b6146fd565b60200260200101518b8b600001518581518110611aba57611aba6146fd565b60200260200101516040518463ffffffff1660e01b8152600401611af79392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015611b14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b38919061474e565b6001600160c01b031683600001518281518110611b5757611b576146fd565b602002602001018181525050611bbd610860611b918486600001518581518110611b8357611b836146fd565b602002602001015116613659565b8a602001518481518110611ba757611ba76146fd565b602002602001015161368490919063ffffffff16565b945080611bc9816147c2565b91505061193b565b5050611bdc83613768565b60995490935060ff16600081611bf3576000611c75565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c448feb86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c759190614735565b905060005b8a8110156122f4578215611dd6578963ffffffff16827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663249a0c428f8f86818110611cd157611cd16146fd565b60405160e085901b6001600160e01b031916815292013560f81c600483015250602401602060405180830381865afa158015611d11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d359190614735565b611d3f91906147aa565b1015611dd65760405162461bcd60e51b81526020600482015260666024820152600080516020614bd283398151915260448201527f7265733a205374616b6552656769737472792075706461746573206d7573742060648201527f62652077697468696e207769746864726177616c44656c6179426c6f636b732060848201526577696e646f7760d01b60a482015260c4016105a1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368bccaac8d8d84818110611e1757611e176146fd565b9050013560f81c60f81b60f81c8c8c60a001518581518110611e3b57611e3b6146fd565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa158015611e97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ebb91906149a0565b6001600160401b031916611ede8a604001518381518110611961576119616146fd565b67ffffffffffffffff191614611f7a5760405162461bcd60e51b81526020600482015260616024820152600080516020614bd283398151915260448201527f7265733a2071756f72756d41706b206861736820696e2073746f72616765206460648201527f6f6573206e6f74206d617463682070726f76696465642071756f72756d2061706084820152606b60f81b60a482015260c4016105a1565b611faa89604001518281518110611f9357611f936146fd565b602002602001015187612eb090919063ffffffff16565b95507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c8294c568d8d84818110611fed57611fed6146fd565b9050013560f81c60f81b60f81c8c8c60c001518581518110612011576120116146fd565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa15801561206d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061209191906149cb565b856020015182815181106120a7576120a76146fd565b6001600160601b039092166020928302919091018201528501518051829081106120d3576120d36146fd565b6020026020010151856000015182815181106120f1576120f16146fd565b60200260200101906001600160601b031690816001600160601b0316815250506000805b8a60200151518110156122df576121698660000151828151811061213b5761213b6146fd565b60200260200101518f8f86818110612155576121556146fd565b600192013560f81c9290921c811614919050565b156122cd577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f2be94ae8f8f868181106121af576121af6146fd565b9050013560f81c60f81b60f81c8e896020015185815181106121d3576121d36146fd565b60200260200101518f60e0015188815181106121f1576121f16146fd565b6020026020010151878151811061220a5761220a6146fd565b60209081029190910101516040516001600160e01b031960e087901b16815260ff909416600485015263ffffffff92831660248501526044840191909152166064820152608401602060405180830381865afa15801561226e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229291906149cb565b87518051859081106122a6576122a66146fd565b602002602001018181516122ba91906149e6565b6001600160601b03169052506001909101905b806122d7816147c2565b915050612115565b505080806122ec906147c2565b915050611c7a565b50505060008061230e8c868a606001518b60800151610745565b915091508161237f5760405162461bcd60e51b81526020600482015260436024820152600080516020614bd283398151915260448201527f7265733a2070616972696e6720707265636f6d70696c652063616c6c206661696064820152621b195960ea1b608482015260a4016105a1565b806123e05760405162461bcd60e51b81526020600482015260396024820152600080516020614bd283398151915260448201527f7265733a207369676e617475726520697320696e76616c69640000000000000060648201526084016105a1565b505060008782602001516040516020016123fb929190614a0e565b60408051808303601f190181529190528051602090910120929b929a509198505050505050505050565b61242d612dac565b6124376000613464565b565b612441612dac565b60405163a98fb35560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a98fb3559061248d908490600401614aa3565b600060405180830381600087803b1580156124a757600080fd5b505af1158015610edb573d6000803e3d6000fd5b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146125035760405162461bcd60e51b81526004016105a190614ab6565b604051639926ee7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639926ee7d906125519085908590600401614b2e565b600060405180830381600087803b15801561256b57600080fd5b505af115801561257f573d6000803e3d6000fd5b505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146125cf5760405162461bcd60e51b81526004016105a190614ab6565b6040516351b27a6d60e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a364f4da9060240161248d565b60006126298183613803565b92915050565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126b59190614777565b60ff169050806126d357505060408051600081526020810190915290565b6000805b8281101561278857604051633ca5a5f560e01b815260ff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa158015612746573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061276a9190614735565b61277490836147aa565b915080612780816147c2565b9150506126d7565b506000816001600160401b038111156127a3576127a3613d6f565b6040519080825280602002602001820160405280156127cc578160200160208202803683370190505b5090506000805b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612831573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128559190614777565b60ff168110156129ee57604051633ca5a5f560e01b815260ff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa1580156128c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128ed9190614735565b905060005b818110156129d9576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa158015612967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061298b91906147f4565b600001518585815181106129a1576129a16146fd565b6001600160a01b0390921660209283029190910190910152836129c3816147c2565b94505080806129d1906147c2565b9150506128f2565b505080806129e6906147c2565b9150506127d3565b5090949350505050565b60606000612a04611051565b9050808410612a26576040516392c4425960e01b815260040160405180910390fd5b6000612a3284866147aa565b905081811115612a3f5750805b6000612a4b8683614989565b6001600160401b03811115612a6257612a62613d6f565b604051908082528060200260200182016040528015612a8b578160200160208202803683370190505b509050855b82811015612ad957612aa360008261381b565b82612aae8984614989565b81518110612abe57612abe6146fd565b6020908102919091010152612ad2816147c2565b9050612a90565b5095945050505050565b612aeb612dac565b6001600160a01b038116612b505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a1565b6105b381613464565b60cb60009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bd09190614631565b6001600160a01b0316336001600160a01b031614612c005760405162461bcd60e51b81526004016105a19061464e565b60cc5419811960cc54191614612c7e5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016105a1565b60cc81905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c906020016106ea565b6001600160a01b038116612d435760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a4016105a1565b60cb54604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a160cb80546001600160a01b0319166001600160a01b0392909216919091179055565b6035546001600160a01b031633146124375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a1565b6000612e128383613827565b9392505050565b6040805180820190915260008082526020820152612e35613c4a565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa9050808015612e6857612e6a565bfe5b5080612ea85760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b60448201526064016105a1565b505092915050565b6040805180820190915260008082526020820152612ecc613c68565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa9050808015612e68575080612ea85760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b60448201526064016105a1565b612f4c613c86565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b604080518082019091526000808252602082015260008080613034600080516020614bb283398151915286614713565b90505b6130408161391a565b9093509150600080516020614bb283398151915282830983141561307a576040805180820190915290815260208101919091529392505050565b600080516020614bb2833981519152600182089050613037565b6040805180820182528681526020808201869052825180840190935286835282018490526000918291906130c6613cab565b60005b600281101561328b5760006130df82600661496a565b90508482600281106130f3576130f36146fd565b602002015151836131058360006147aa565b600c8110613115576131156146fd565b602002015284826002811061312c5761312c6146fd565b6020020151602001518382600161314391906147aa565b600c8110613153576131536146fd565b602002015283826002811061316a5761316a6146fd565b602002015151518361317d8360026147aa565b600c811061318d5761318d6146fd565b60200201528382600281106131a4576131a46146fd565b60200201515160016020020151836131bd8360036147aa565b600c81106131cd576131cd6146fd565b60200201528382600281106131e4576131e46146fd565b6020020151602001516000600281106131ff576131ff6146fd565b6020020151836132108360046147aa565b600c8110613220576132206146fd565b6020020152838260028110613237576132376146fd565b602002015160200151600160028110613252576132526146fd565b6020020151836132638360056147aa565b600c8110613273576132736146fd565b60200201525080613283816147c2565b9150506130c9565b50613294613cca565b60006020826101808560088cfa9151919c9115159b50909950505050505050505050565b60606000806132c684613659565b61ffff166001600160401b038111156132e1576132e1613d6f565b6040519080825280601f01601f19166020018201604052801561330b576020820181803683370190505b5090506000805b825182108015613323575061010081105b156129ee576001811b93508584161561336a578060f81b83838151811061334c5761334c6146fd565b60200101906001600160f81b031916908160001a9053508160010191505b613373816147c2565b9050613312565b60cb546001600160a01b031615801561339b57506001600160a01b03821615155b61341d5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016105a1565b60cc81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a261346082612cb5565b5050565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600280546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f175f27847b3568e0da876ffca3dc0bb52db4e6556346aedb530c6fe86610da27910160405180910390a15050565b6000612629825490565b600061355e82604080518082019091526000808252602082015250604080518082019091528151815260609091015163ffffffff16602082015290565b6040805182516020808301919091529092015163ffffffff1690820152606001604051602081830303815290604052805190602001209050919050565b6000612e12838361399c565b6000806135b3846139eb565b90508015612e12578260ff1684600186516135ce9190614989565b815181106135de576135de6146fd565b016020015160f81c10612e125760405162461bcd60e51b815260206004820152603f60248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206269746d61702065786365656473206d61782076616c75650060648201526084016105a1565b6000805b82156126295761366e600184614989565b909216918061367c81614b79565b91505061365d565b60408051808201909152600080825260208201526102008261ffff16106136e05760405162461bcd60e51b815260206004820152601060248201526f7363616c61722d746f6f2d6c6172676560801b60448201526064016105a1565b8161ffff16600114156136f4575081612629565b6040805180820190915260008082526020820181905284906001905b8161ffff168661ffff161061375d57600161ffff871660ff83161c811614156137405761373d8484612eb0565b93505b61374a8384612eb0565b92506201fffe600192831b169101613710565b509195945050505050565b6040805180820190915260008082526020820152815115801561378d57506020820151155b156137ab575050604080518082019091526000808252602082015290565b604051806040016040528083600001518152602001600080516020614bb283398151915284602001516137de9190614713565b6137f690600080516020614bb2833981519152614989565b905292915050565b919050565b60008181526001830160205260408120541515612e12565b6000612e128383613b78565b6000818152600183016020526040812054801561391057600061384b600183614989565b855490915060009061385f90600190614989565b90508181146138c457600086600001828154811061387f5761387f6146fd565b90600052602060002001549050808760000184815481106138a2576138a26146fd565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806138d5576138d5614b9b565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050612629565b6000915050612629565b60008080600080516020614bb28339815191526003600080516020614bb283398151915286600080516020614bb2833981519152888909090890506000613990827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52600080516020614bb2833981519152613ba2565b91959194509092505050565b60008181526001830160205260408120546139e357508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155612629565b506000612629565b600061010082511115613a745760405162461bcd60e51b8152602060048201526044602482018190527f4269746d61705574696c732e6f72646572656442797465734172726179546f42908201527f69746d61703a206f7264657265644279746573417272617920697320746f6f206064820152636c6f6e6760e01b608482015260a4016105a1565b8151613a8257506000919050565b60008083600081518110613a9857613a986146fd565b0160200151600160f89190911c81901b92505b8451811015613b6f57848181518110613ac657613ac66146fd565b0160200151600160f89190911c1b9150828211613b5b5760405162461bcd60e51b815260206004820152604760248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206f72646572656442797465734172726179206973206e6f74206064820152661bdc99195c995960ca1b608482015260a4016105a1565b91811791613b68816147c2565b9050613aab565b50909392505050565b6000826000018281548110613b8f57613b8f6146fd565b9060005260206000200154905092915050565b600080613bad613cca565b613bb5613ce8565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa9250828015612e68575082613c3f5760405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c75726500000000000060448201526064016105a1565b505195945050505050565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280613c99613d06565b8152602001613ca6613d06565b905290565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b03811681146105b357600080fd5b600060208284031215613d4b57600080fd5b8135612e1281613d24565b600060208284031215613d6857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613da757613da7613d6f565b60405290565b60405161010081016001600160401b0381118282101715613da757613da7613d6f565b604051601f8201601f191681016001600160401b0381118282101715613df857613df8613d6f565b604052919050565b600060408284031215613e1257600080fd5b613e1a613d85565b9050813581526020820135602082015292915050565b600082601f830112613e4157600080fd5b613e49613d85565b806040840185811115613e5b57600080fd5b845b81811015613e75578035845260209384019301613e5d565b509095945050505050565b600060808284031215613e9257600080fd5b613e9a613d85565b9050613ea68383613e30565b8152613eb58360408401613e30565b602082015292915050565b6000806000806101208587031215613ed757600080fd5b84359350613ee88660208701613e00565b9250613ef78660608701613e80565b9150613f068660e08701613e00565b905092959194509250565b6020808252825182820181905260009190848201906040850190845b81811015613f525783516001600160a01b031683529284019291840191600101613f2d565b50909695505050505050565b60008060008060808587031215613f7457600080fd5b8435613f7f81613d24565b9350602085013592506040850135613f9681613d24565b91506060850135613fa681613d24565b939692955090935050565b80151581146105b357600080fd5b600060208284031215613fd157600080fd5b8135612e1281613fb1565b60006001600160401b03821115613ff557613ff5613d6f565b5060051b60200190565b803563ffffffff811681146137fe57600080fd5b600082601f83011261402457600080fd5b8135602061403961403483613fdc565b613dd0565b82815260059290921b8401810191818101908684111561405857600080fd5b8286015b8481101561407a5761406d81613fff565b835291830191830161405c565b509695505050505050565b600082601f83011261409657600080fd5b813560206140a661403483613fdc565b82815260069290921b840181019181810190868411156140c557600080fd5b8286015b8481101561407a576140db8882613e00565b8352918301916040016140c9565b600082601f8301126140fa57600080fd5b8135602061410a61403483613fdc565b82815260059290921b8401810191818101908684111561412957600080fd5b8286015b8481101561407a5780356001600160401b0381111561414c5760008081fd5b61415a8986838b0101614013565b84525091830191830161412d565b6000610180828403121561417b57600080fd5b614183613dad565b905081356001600160401b038082111561419c57600080fd5b6141a885838601614013565b835260208401359150808211156141be57600080fd5b6141ca85838601614085565b602084015260408401359150808211156141e357600080fd5b6141ef85838601614085565b60408401526142018560608601613e80565b60608401526142138560e08601613e00565b608084015261012084013591508082111561422d57600080fd5b61423985838601614013565b60a084015261014084013591508082111561425357600080fd5b61425f85838601614013565b60c084015261016084013591508082111561427957600080fd5b50614286848285016140e9565b60e08301525092915050565b600080604083850312156142a557600080fd5b82356001600160401b03808211156142bc57600080fd5b90840190608082870312156142d057600080fd5b909250602084013590808211156142e657600080fd5b506142f385828601614168565b9150509250929050565b60ff811681146105b357600080fd5b60006020828403121561431e57600080fd5b8135612e12816142fd565b60008060008060006080868803121561434157600080fd5b8535945060208601356001600160401b038082111561435f57600080fd5b818801915088601f83011261437357600080fd5b81358181111561438257600080fd5b89602082850101111561439457600080fd5b60208301965094506143a860408901613fff565b935060608801359150808211156143be57600080fd5b506143cb88828901614168565b9150509295509295909350565b600081518084526020808501945080840160005b838110156144115781516001600160601b0316875295820195908201906001016143ec565b509495945050505050565b604081526000835160408084015261443760808401826143d8565b90506020850151603f1984830301606085015261445482826143d8565b925050508260208301529392505050565b60006001600160401b0383111561447e5761447e613d6f565b614491601f8401601f1916602001613dd0565b90508281528383830111156144a557600080fd5b828260208301376000602084830101529392505050565b6000602082840312156144ce57600080fd5b81356001600160401b038111156144e457600080fd5b8201601f810184136144f557600080fd5b61450484823560208401614465565b949350505050565b600082601f83011261451d57600080fd5b612e1283833560208501614465565b6000806040838503121561453f57600080fd5b823561454a81613d24565b915060208301356001600160401b038082111561456657600080fd5b908401906060828703121561457a57600080fd5b60405160608101818110838211171561459557614595613d6f565b6040528235828111156145a757600080fd5b6145b38882860161450c565b82525060208301356020820152604083013560408201528093505050509250929050565b600080604083850312156145ea57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015613f5257835183529284019291840191600101614615565b60006020828403121561464357600080fd5b8151612e1281613d24565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b6000602082840312156146aa57600080fd5b8151612e1281613fb1565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60008261473057634e487b7160e01b600052601260045260246000fd5b500690565b60006020828403121561474757600080fd5b5051919050565b60006020828403121561476057600080fd5b81516001600160c01b0381168114612e1257600080fd5b60006020828403121561478957600080fd5b8151612e12816142fd565b634e487b7160e01b600052601160045260246000fd5b600082198211156147bd576147bd614794565b500190565b60006000198214156147d6576147d6614794565b5060010190565b80516001600160601b03811681146137fe57600080fd5b60006040828403121561480657600080fd5b61480e613d85565b825161481981613d24565b8152614827602084016147dd565b60208201529392505050565b60006020828403121561484557600080fd5b612e1282613fff565b60006080823603121561486057600080fd5b604051608081016001600160401b03828210818311171561488357614883613d6f565b8160405284358352602085013591508082111561489f57600080fd5b6148ab3683870161450c565b602084015260408501359150808211156148c457600080fd5b506148d13682860161450c565b6040830152506148e360608401613fff565b606082015292915050565b6000808335601e1984360301811261490557600080fd5b8301803591506001600160401b0382111561491f57600080fd5b60200191503681900382131561493457600080fd5b9250929050565b60006001600160601b038083168185168183048111821515161561496157614961614794565b02949350505050565b600081600019048311821515161561498457614984614794565b500290565b60008282101561499b5761499b614794565b500390565b6000602082840312156149b257600080fd5b815167ffffffffffffffff1981168114612e1257600080fd5b6000602082840312156149dd57600080fd5b612e12826147dd565b60006001600160601b0383811690831681811015614a0657614a06614794565b039392505050565b63ffffffff60e01b8360e01b1681526000600482018351602080860160005b83811015614a4957815185529382019390820190600101614a2d565b5092979650505050505050565b6000815180845260005b81811015614a7c57602081850181015186830182015201614a60565b81811115614a8e576000602083870101525b50601f01601f19169290920160200192915050565b602081526000612e126020830184614a56565b60208082526052908201527f536572766963654d616e61676572426173652e6f6e6c7952656769737472794360408201527f6f6f7264696e61746f723a2063616c6c6572206973206e6f742074686520726560608201527133b4b9ba393c9031b7b7b93234b730ba37b960711b608082015260a00190565b60018060a01b0383168152604060208201526000825160606040840152614b5860a0840182614a56565b90506020840151606084015260408401516080840152809150509392505050565b600061ffff80831681811415614b9157614b91614794565b6001019392505050565b634e487b7160e01b600052603160045260246000fdfe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47424c535369676e6174757265436865636b65722e636865636b5369676e617475a2646970667358221220e3f898f0eb876bae1a18363a7b03de895f41cd61b1b499b7329c6997517984cd64736f6c634300080c0033",
}

// ContractMachServiceManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMachServiceManagerMetaData.ABI instead.
var ContractMachServiceManagerABI = ContractMachServiceManagerMetaData.ABI

// ContractMachServiceManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMachServiceManagerMetaData.Bin instead.
var ContractMachServiceManagerBin = ContractMachServiceManagerMetaData.Bin

// DeployContractMachServiceManager deploys a new Ethereum contract, binding an instance of ContractMachServiceManager to it.
func DeployContractMachServiceManager(auth *bind.TransactOpts, backend bind.ContractBackend, __avsDirectory common.Address, __registryCoordinator common.Address, __stakeRegistry common.Address) (common.Address, *types.Transaction, *ContractMachServiceManager, error) {
	parsed, err := ContractMachServiceManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractMachServiceManagerBin), backend, __avsDirectory, __registryCoordinator, __stakeRegistry)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractMachServiceManager{ContractMachServiceManagerCaller: ContractMachServiceManagerCaller{contract: contract}, ContractMachServiceManagerTransactor: ContractMachServiceManagerTransactor{contract: contract}, ContractMachServiceManagerFilterer: ContractMachServiceManagerFilterer{contract: contract}}, nil
}

// ContractMachServiceManager is an auto generated Go binding around an Ethereum contract.
type ContractMachServiceManager struct {
	ContractMachServiceManagerCaller     // Read-only binding to the contract
	ContractMachServiceManagerTransactor // Write-only binding to the contract
	ContractMachServiceManagerFilterer   // Log filterer for contract events
}

// ContractMachServiceManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractMachServiceManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractMachServiceManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractMachServiceManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractMachServiceManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractMachServiceManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractMachServiceManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractMachServiceManagerSession struct {
	Contract     *ContractMachServiceManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts               // Call options to use throughout this session
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// ContractMachServiceManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractMachServiceManagerCallerSession struct {
	Contract *ContractMachServiceManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                     // Call options to use throughout this session
}

// ContractMachServiceManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractMachServiceManagerTransactorSession struct {
	Contract     *ContractMachServiceManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                     // Transaction auth options to use throughout this session
}

// ContractMachServiceManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractMachServiceManagerRaw struct {
	Contract *ContractMachServiceManager // Generic contract binding to access the raw methods on
}

// ContractMachServiceManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractMachServiceManagerCallerRaw struct {
	Contract *ContractMachServiceManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ContractMachServiceManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractMachServiceManagerTransactorRaw struct {
	Contract *ContractMachServiceManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractMachServiceManager creates a new instance of ContractMachServiceManager, bound to a specific deployed contract.
func NewContractMachServiceManager(address common.Address, backend bind.ContractBackend) (*ContractMachServiceManager, error) {
	contract, err := bindContractMachServiceManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManager{ContractMachServiceManagerCaller: ContractMachServiceManagerCaller{contract: contract}, ContractMachServiceManagerTransactor: ContractMachServiceManagerTransactor{contract: contract}, ContractMachServiceManagerFilterer: ContractMachServiceManagerFilterer{contract: contract}}, nil
}

// NewContractMachServiceManagerCaller creates a new read-only instance of ContractMachServiceManager, bound to a specific deployed contract.
func NewContractMachServiceManagerCaller(address common.Address, caller bind.ContractCaller) (*ContractMachServiceManagerCaller, error) {
	contract, err := bindContractMachServiceManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManagerCaller{contract: contract}, nil
}

// NewContractMachServiceManagerTransactor creates a new write-only instance of ContractMachServiceManager, bound to a specific deployed contract.
func NewContractMachServiceManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractMachServiceManagerTransactor, error) {
	contract, err := bindContractMachServiceManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManagerTransactor{contract: contract}, nil
}

// NewContractMachServiceManagerFilterer creates a new log filterer instance of ContractMachServiceManager, bound to a specific deployed contract.
func NewContractMachServiceManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractMachServiceManagerFilterer, error) {
	contract, err := bindContractMachServiceManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManagerFilterer{contract: contract}, nil
}

// bindContractMachServiceManager binds a generic wrapper to an already deployed contract.
func bindContractMachServiceManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMachServiceManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractMachServiceManager *ContractMachServiceManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractMachServiceManager.Contract.ContractMachServiceManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractMachServiceManager *ContractMachServiceManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.ContractMachServiceManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractMachServiceManager *ContractMachServiceManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.ContractMachServiceManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractMachServiceManager *ContractMachServiceManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractMachServiceManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.contract.Transact(opts, method, params...)
}

// THRESHOLDDENOMINATOR is a free data retrieval call binding the contract method 0xef024458.
//
// Solidity: function THRESHOLD_DENOMINATOR() view returns(uint256)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) THRESHOLDDENOMINATOR(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "THRESHOLD_DENOMINATOR")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// THRESHOLDDENOMINATOR is a free data retrieval call binding the contract method 0xef024458.
//
// Solidity: function THRESHOLD_DENOMINATOR() view returns(uint256)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) THRESHOLDDENOMINATOR() (*big.Int, error) {
	return _ContractMachServiceManager.Contract.THRESHOLDDENOMINATOR(&_ContractMachServiceManager.CallOpts)
}

// THRESHOLDDENOMINATOR is a free data retrieval call binding the contract method 0xef024458.
//
// Solidity: function THRESHOLD_DENOMINATOR() view returns(uint256)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) THRESHOLDDENOMINATOR() (*big.Int, error) {
	return _ContractMachServiceManager.Contract.THRESHOLDDENOMINATOR(&_ContractMachServiceManager.CallOpts)
}

// AlertConfirmer is a free data retrieval call binding the contract method 0x39bc68e7.
//
// Solidity: function alertConfirmer() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) AlertConfirmer(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "alertConfirmer")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AlertConfirmer is a free data retrieval call binding the contract method 0x39bc68e7.
//
// Solidity: function alertConfirmer() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) AlertConfirmer() (common.Address, error) {
	return _ContractMachServiceManager.Contract.AlertConfirmer(&_ContractMachServiceManager.CallOpts)
}

// AlertConfirmer is a free data retrieval call binding the contract method 0x39bc68e7.
//
// Solidity: function alertConfirmer() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) AlertConfirmer() (common.Address, error) {
	return _ContractMachServiceManager.Contract.AlertConfirmer(&_ContractMachServiceManager.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) AvsDirectory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "avsDirectory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) AvsDirectory() (common.Address, error) {
	return _ContractMachServiceManager.Contract.AvsDirectory(&_ContractMachServiceManager.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) AvsDirectory() (common.Address, error) {
	return _ContractMachServiceManager.Contract.AvsDirectory(&_ContractMachServiceManager.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) BlsApkRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "blsApkRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) BlsApkRegistry() (common.Address, error) {
	return _ContractMachServiceManager.Contract.BlsApkRegistry(&_ContractMachServiceManager.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) BlsApkRegistry() (common.Address, error) {
	return _ContractMachServiceManager.Contract.BlsApkRegistry(&_ContractMachServiceManager.CallOpts)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) CheckSignatures(opts *bind.CallOpts, msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "checkSignatures", msgHash, quorumNumbers, referenceBlockNumber, params)

	if err != nil {
		return *new(IBLSSignatureCheckerQuorumStakeTotals), *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(IBLSSignatureCheckerQuorumStakeTotals)).(*IBLSSignatureCheckerQuorumStakeTotals)
	out1 := *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)

	return out0, out1, err

}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractMachServiceManager.Contract.CheckSignatures(&_ContractMachServiceManager.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractMachServiceManager.Contract.CheckSignatures(&_ContractMachServiceManager.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// Contains is a free data retrieval call binding the contract method 0xc34052e0.
//
// Solidity: function contains(uint256 blockNumber) view returns(bool)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) Contains(opts *bind.CallOpts, blockNumber *big.Int) (bool, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "contains", blockNumber)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Contains is a free data retrieval call binding the contract method 0xc34052e0.
//
// Solidity: function contains(uint256 blockNumber) view returns(bool)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) Contains(blockNumber *big.Int) (bool, error) {
	return _ContractMachServiceManager.Contract.Contains(&_ContractMachServiceManager.CallOpts, blockNumber)
}

// Contains is a free data retrieval call binding the contract method 0xc34052e0.
//
// Solidity: function contains(uint256 blockNumber) view returns(bool)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) Contains(blockNumber *big.Int) (bool, error) {
	return _ContractMachServiceManager.Contract.Contains(&_ContractMachServiceManager.CallOpts, blockNumber)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) Delegation(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "delegation")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) Delegation() (common.Address, error) {
	return _ContractMachServiceManager.Contract.Delegation(&_ContractMachServiceManager.CallOpts)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) Delegation() (common.Address, error) {
	return _ContractMachServiceManager.Contract.Delegation(&_ContractMachServiceManager.CallOpts)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) GetOperatorRestakedStrategies(opts *bind.CallOpts, operator common.Address) ([]common.Address, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "getOperatorRestakedStrategies", operator)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractMachServiceManager *ContractMachServiceManagerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractMachServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractMachServiceManager.CallOpts, operator)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractMachServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractMachServiceManager.CallOpts, operator)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) GetRestakeableStrategies(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "getRestakeableStrategies")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractMachServiceManager *ContractMachServiceManagerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractMachServiceManager.Contract.GetRestakeableStrategies(&_ContractMachServiceManager.CallOpts)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractMachServiceManager.Contract.GetRestakeableStrategies(&_ContractMachServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) Owner() (common.Address, error) {
	return _ContractMachServiceManager.Contract.Owner(&_ContractMachServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) Owner() (common.Address, error) {
	return _ContractMachServiceManager.Contract.Owner(&_ContractMachServiceManager.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) Paused(opts *bind.CallOpts, index uint8) (bool, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "paused", index)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) Paused(index uint8) (bool, error) {
	return _ContractMachServiceManager.Contract.Paused(&_ContractMachServiceManager.CallOpts, index)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) Paused(index uint8) (bool, error) {
	return _ContractMachServiceManager.Contract.Paused(&_ContractMachServiceManager.CallOpts, index)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) Paused0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "paused0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) Paused0() (*big.Int, error) {
	return _ContractMachServiceManager.Contract.Paused0(&_ContractMachServiceManager.CallOpts)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) Paused0() (*big.Int, error) {
	return _ContractMachServiceManager.Contract.Paused0(&_ContractMachServiceManager.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) PauserRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "pauserRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) PauserRegistry() (common.Address, error) {
	return _ContractMachServiceManager.Contract.PauserRegistry(&_ContractMachServiceManager.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) PauserRegistry() (common.Address, error) {
	return _ContractMachServiceManager.Contract.PauserRegistry(&_ContractMachServiceManager.CallOpts)
}

// QueryBlockNumber is a free data retrieval call binding the contract method 0xf0bb5a9b.
//
// Solidity: function queryBlockNumber(uint256 start, uint256 querySize) view returns(uint256[])
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) QueryBlockNumber(opts *bind.CallOpts, start *big.Int, querySize *big.Int) ([]*big.Int, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "queryBlockNumber", start, querySize)

	if err != nil {
		return *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]*big.Int)).(*[]*big.Int)

	return out0, err

}

// QueryBlockNumber is a free data retrieval call binding the contract method 0xf0bb5a9b.
//
// Solidity: function queryBlockNumber(uint256 start, uint256 querySize) view returns(uint256[])
func (_ContractMachServiceManager *ContractMachServiceManagerSession) QueryBlockNumber(start *big.Int, querySize *big.Int) ([]*big.Int, error) {
	return _ContractMachServiceManager.Contract.QueryBlockNumber(&_ContractMachServiceManager.CallOpts, start, querySize)
}

// QueryBlockNumber is a free data retrieval call binding the contract method 0xf0bb5a9b.
//
// Solidity: function queryBlockNumber(uint256 start, uint256 querySize) view returns(uint256[])
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) QueryBlockNumber(start *big.Int, querySize *big.Int) ([]*big.Int, error) {
	return _ContractMachServiceManager.Contract.QueryBlockNumber(&_ContractMachServiceManager.CallOpts, start, querySize)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) RegistryCoordinator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "registryCoordinator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractMachServiceManager.Contract.RegistryCoordinator(&_ContractMachServiceManager.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractMachServiceManager.Contract.RegistryCoordinator(&_ContractMachServiceManager.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) StakeRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "stakeRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) StakeRegistry() (common.Address, error) {
	return _ContractMachServiceManager.Contract.StakeRegistry(&_ContractMachServiceManager.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) StakeRegistry() (common.Address, error) {
	return _ContractMachServiceManager.Contract.StakeRegistry(&_ContractMachServiceManager.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) StaleStakesForbidden(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "staleStakesForbidden")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) StaleStakesForbidden() (bool, error) {
	return _ContractMachServiceManager.Contract.StaleStakesForbidden(&_ContractMachServiceManager.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) StaleStakesForbidden() (bool, error) {
	return _ContractMachServiceManager.Contract.StaleStakesForbidden(&_ContractMachServiceManager.CallOpts)
}

// TotalAlerts is a free data retrieval call binding the contract method 0x4f2b85db.
//
// Solidity: function totalAlerts() view returns(uint256)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) TotalAlerts(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "totalAlerts")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalAlerts is a free data retrieval call binding the contract method 0x4f2b85db.
//
// Solidity: function totalAlerts() view returns(uint256)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) TotalAlerts() (*big.Int, error) {
	return _ContractMachServiceManager.Contract.TotalAlerts(&_ContractMachServiceManager.CallOpts)
}

// TotalAlerts is a free data retrieval call binding the contract method 0x4f2b85db.
//
// Solidity: function totalAlerts() view returns(uint256)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) TotalAlerts() (*big.Int, error) {
	return _ContractMachServiceManager.Contract.TotalAlerts(&_ContractMachServiceManager.CallOpts)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractMachServiceManager *ContractMachServiceManagerCaller) TrySignatureAndApkVerification(opts *bind.CallOpts, msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	var out []interface{}
	err := _ContractMachServiceManager.contract.Call(opts, &out, "trySignatureAndApkVerification", msgHash, apk, apkG2, sigma)

	outstruct := new(struct {
		PairingSuccessful bool
		SiganatureIsValid bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.PairingSuccessful = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.SiganatureIsValid = *abi.ConvertType(out[1], new(bool)).(*bool)

	return *outstruct, err

}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractMachServiceManager *ContractMachServiceManagerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractMachServiceManager.Contract.TrySignatureAndApkVerification(&_ContractMachServiceManager.CallOpts, msgHash, apk, apkG2, sigma)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractMachServiceManager *ContractMachServiceManagerCallerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractMachServiceManager.Contract.TrySignatureAndApkVerification(&_ContractMachServiceManager.CallOpts, msgHash, apk, apkG2, sigma)
}

// ConfirmAlert is a paid mutator transaction binding the contract method 0x5abd2abe.
//
// Solidity: function confirmAlert((uint256,bytes,bytes,uint32) alertHeader, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) ConfirmAlert(opts *bind.TransactOpts, alertHeader IMachServiceManagerAlertHeader, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "confirmAlert", alertHeader, nonSignerStakesAndSignature)
}

// ConfirmAlert is a paid mutator transaction binding the contract method 0x5abd2abe.
//
// Solidity: function confirmAlert((uint256,bytes,bytes,uint32) alertHeader, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) ConfirmAlert(alertHeader IMachServiceManagerAlertHeader, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.ConfirmAlert(&_ContractMachServiceManager.TransactOpts, alertHeader, nonSignerStakesAndSignature)
}

// ConfirmAlert is a paid mutator transaction binding the contract method 0x5abd2abe.
//
// Solidity: function confirmAlert((uint256,bytes,bytes,uint32) alertHeader, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) ConfirmAlert(alertHeader IMachServiceManagerAlertHeader, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.ConfirmAlert(&_ContractMachServiceManager.TransactOpts, alertHeader, nonSignerStakesAndSignature)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) DeregisterOperatorFromAVS(opts *bind.TransactOpts, operator common.Address) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "deregisterOperatorFromAVS", operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractMachServiceManager.TransactOpts, operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractMachServiceManager.TransactOpts, operator)
}

// Initialize is a paid mutator transaction binding the contract method 0x358394d8.
//
// Solidity: function initialize(address _pauserRegistry, uint256 _initialPausedStatus, address _initialOwner, address _batchConfirmer) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) Initialize(opts *bind.TransactOpts, _pauserRegistry common.Address, _initialPausedStatus *big.Int, _initialOwner common.Address, _batchConfirmer common.Address) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "initialize", _pauserRegistry, _initialPausedStatus, _initialOwner, _batchConfirmer)
}

// Initialize is a paid mutator transaction binding the contract method 0x358394d8.
//
// Solidity: function initialize(address _pauserRegistry, uint256 _initialPausedStatus, address _initialOwner, address _batchConfirmer) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) Initialize(_pauserRegistry common.Address, _initialPausedStatus *big.Int, _initialOwner common.Address, _batchConfirmer common.Address) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.Initialize(&_ContractMachServiceManager.TransactOpts, _pauserRegistry, _initialPausedStatus, _initialOwner, _batchConfirmer)
}

// Initialize is a paid mutator transaction binding the contract method 0x358394d8.
//
// Solidity: function initialize(address _pauserRegistry, uint256 _initialPausedStatus, address _initialOwner, address _batchConfirmer) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) Initialize(_pauserRegistry common.Address, _initialPausedStatus *big.Int, _initialOwner common.Address, _batchConfirmer common.Address) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.Initialize(&_ContractMachServiceManager.TransactOpts, _pauserRegistry, _initialPausedStatus, _initialOwner, _batchConfirmer)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) Pause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "pause", newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.Pause(&_ContractMachServiceManager.TransactOpts, newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.Pause(&_ContractMachServiceManager.TransactOpts, newPausedStatus)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) PauseAll(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "pauseAll")
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) PauseAll() (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.PauseAll(&_ContractMachServiceManager.TransactOpts)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) PauseAll() (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.PauseAll(&_ContractMachServiceManager.TransactOpts)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) RegisterOperatorToAVS(opts *bind.TransactOpts, operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "registerOperatorToAVS", operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.RegisterOperatorToAVS(&_ContractMachServiceManager.TransactOpts, operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.RegisterOperatorToAVS(&_ContractMachServiceManager.TransactOpts, operator, operatorSignature)
}

// RemoveAlert is a paid mutator transaction binding the contract method 0x13b162e9.
//
// Solidity: function removeAlert(uint256 blockNumber) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) RemoveAlert(opts *bind.TransactOpts, blockNumber *big.Int) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "removeAlert", blockNumber)
}

// RemoveAlert is a paid mutator transaction binding the contract method 0x13b162e9.
//
// Solidity: function removeAlert(uint256 blockNumber) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) RemoveAlert(blockNumber *big.Int) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.RemoveAlert(&_ContractMachServiceManager.TransactOpts, blockNumber)
}

// RemoveAlert is a paid mutator transaction binding the contract method 0x13b162e9.
//
// Solidity: function removeAlert(uint256 blockNumber) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) RemoveAlert(blockNumber *big.Int) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.RemoveAlert(&_ContractMachServiceManager.TransactOpts, blockNumber)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.RenounceOwnership(&_ContractMachServiceManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.RenounceOwnership(&_ContractMachServiceManager.TransactOpts)
}

// SetMetadataURI is a paid mutator transaction binding the contract method 0x750521f5.
//
// Solidity: function setMetadataURI(string _metadataURI) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) SetMetadataURI(opts *bind.TransactOpts, _metadataURI string) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "setMetadataURI", _metadataURI)
}

// SetMetadataURI is a paid mutator transaction binding the contract method 0x750521f5.
//
// Solidity: function setMetadataURI(string _metadataURI) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) SetMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.SetMetadataURI(&_ContractMachServiceManager.TransactOpts, _metadataURI)
}

// SetMetadataURI is a paid mutator transaction binding the contract method 0x750521f5.
//
// Solidity: function setMetadataURI(string _metadataURI) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) SetMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.SetMetadataURI(&_ContractMachServiceManager.TransactOpts, _metadataURI)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) SetPauserRegistry(opts *bind.TransactOpts, newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "setPauserRegistry", newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.SetPauserRegistry(&_ContractMachServiceManager.TransactOpts, newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.SetPauserRegistry(&_ContractMachServiceManager.TransactOpts, newPauserRegistry)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) SetStaleStakesForbidden(opts *bind.TransactOpts, value bool) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "setStaleStakesForbidden", value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.SetStaleStakesForbidden(&_ContractMachServiceManager.TransactOpts, value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.SetStaleStakesForbidden(&_ContractMachServiceManager.TransactOpts, value)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.TransferOwnership(&_ContractMachServiceManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.TransferOwnership(&_ContractMachServiceManager.TransactOpts, newOwner)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactor) Unpause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractMachServiceManager.contract.Transact(opts, "unpause", newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.Unpause(&_ContractMachServiceManager.TransactOpts, newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractMachServiceManager *ContractMachServiceManagerTransactorSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractMachServiceManager.Contract.Unpause(&_ContractMachServiceManager.TransactOpts, newPausedStatus)
}

// ContractMachServiceManagerAlertConfirmedIterator is returned from FilterAlertConfirmed and is used to iterate over the raw logs and unpacked data for AlertConfirmed events raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerAlertConfirmedIterator struct {
	Event *ContractMachServiceManagerAlertConfirmed // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMachServiceManagerAlertConfirmedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMachServiceManagerAlertConfirmed)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMachServiceManagerAlertConfirmed)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMachServiceManagerAlertConfirmedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMachServiceManagerAlertConfirmedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMachServiceManagerAlertConfirmed represents a AlertConfirmed event raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerAlertConfirmed struct {
	AlertHeaderHash [32]byte
	BlockNumber     *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterAlertConfirmed is a free log retrieval operation binding the contract event 0xbcf10fb01198afab314eb9cd559cab7e42b0f5131712822bdc5118dfbb937fdd.
//
// Solidity: event AlertConfirmed(bytes32 indexed alertHeaderHash, uint256 blockNumber)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) FilterAlertConfirmed(opts *bind.FilterOpts, alertHeaderHash [][32]byte) (*ContractMachServiceManagerAlertConfirmedIterator, error) {

	var alertHeaderHashRule []interface{}
	for _, alertHeaderHashItem := range alertHeaderHash {
		alertHeaderHashRule = append(alertHeaderHashRule, alertHeaderHashItem)
	}

	logs, sub, err := _ContractMachServiceManager.contract.FilterLogs(opts, "AlertConfirmed", alertHeaderHashRule)
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManagerAlertConfirmedIterator{contract: _ContractMachServiceManager.contract, event: "AlertConfirmed", logs: logs, sub: sub}, nil
}

// WatchAlertConfirmed is a free log subscription operation binding the contract event 0xbcf10fb01198afab314eb9cd559cab7e42b0f5131712822bdc5118dfbb937fdd.
//
// Solidity: event AlertConfirmed(bytes32 indexed alertHeaderHash, uint256 blockNumber)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) WatchAlertConfirmed(opts *bind.WatchOpts, sink chan<- *ContractMachServiceManagerAlertConfirmed, alertHeaderHash [][32]byte) (event.Subscription, error) {

	var alertHeaderHashRule []interface{}
	for _, alertHeaderHashItem := range alertHeaderHash {
		alertHeaderHashRule = append(alertHeaderHashRule, alertHeaderHashItem)
	}

	logs, sub, err := _ContractMachServiceManager.contract.WatchLogs(opts, "AlertConfirmed", alertHeaderHashRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMachServiceManagerAlertConfirmed)
				if err := _ContractMachServiceManager.contract.UnpackLog(event, "AlertConfirmed", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAlertConfirmed is a log parse operation binding the contract event 0xbcf10fb01198afab314eb9cd559cab7e42b0f5131712822bdc5118dfbb937fdd.
//
// Solidity: event AlertConfirmed(bytes32 indexed alertHeaderHash, uint256 blockNumber)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) ParseAlertConfirmed(log types.Log) (*ContractMachServiceManagerAlertConfirmed, error) {
	event := new(ContractMachServiceManagerAlertConfirmed)
	if err := _ContractMachServiceManager.contract.UnpackLog(event, "AlertConfirmed", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMachServiceManagerAlertConfirmerChangedIterator is returned from FilterAlertConfirmerChanged and is used to iterate over the raw logs and unpacked data for AlertConfirmerChanged events raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerAlertConfirmerChangedIterator struct {
	Event *ContractMachServiceManagerAlertConfirmerChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMachServiceManagerAlertConfirmerChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMachServiceManagerAlertConfirmerChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMachServiceManagerAlertConfirmerChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMachServiceManagerAlertConfirmerChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMachServiceManagerAlertConfirmerChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMachServiceManagerAlertConfirmerChanged represents a AlertConfirmerChanged event raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerAlertConfirmerChanged struct {
	PreviousAddress common.Address
	NewAddress      common.Address
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterAlertConfirmerChanged is a free log retrieval operation binding the contract event 0x175f27847b3568e0da876ffca3dc0bb52db4e6556346aedb530c6fe86610da27.
//
// Solidity: event AlertConfirmerChanged(address previousAddress, address newAddress)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) FilterAlertConfirmerChanged(opts *bind.FilterOpts) (*ContractMachServiceManagerAlertConfirmerChangedIterator, error) {

	logs, sub, err := _ContractMachServiceManager.contract.FilterLogs(opts, "AlertConfirmerChanged")
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManagerAlertConfirmerChangedIterator{contract: _ContractMachServiceManager.contract, event: "AlertConfirmerChanged", logs: logs, sub: sub}, nil
}

// WatchAlertConfirmerChanged is a free log subscription operation binding the contract event 0x175f27847b3568e0da876ffca3dc0bb52db4e6556346aedb530c6fe86610da27.
//
// Solidity: event AlertConfirmerChanged(address previousAddress, address newAddress)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) WatchAlertConfirmerChanged(opts *bind.WatchOpts, sink chan<- *ContractMachServiceManagerAlertConfirmerChanged) (event.Subscription, error) {

	logs, sub, err := _ContractMachServiceManager.contract.WatchLogs(opts, "AlertConfirmerChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMachServiceManagerAlertConfirmerChanged)
				if err := _ContractMachServiceManager.contract.UnpackLog(event, "AlertConfirmerChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAlertConfirmerChanged is a log parse operation binding the contract event 0x175f27847b3568e0da876ffca3dc0bb52db4e6556346aedb530c6fe86610da27.
//
// Solidity: event AlertConfirmerChanged(address previousAddress, address newAddress)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) ParseAlertConfirmerChanged(log types.Log) (*ContractMachServiceManagerAlertConfirmerChanged, error) {
	event := new(ContractMachServiceManagerAlertConfirmerChanged)
	if err := _ContractMachServiceManager.contract.UnpackLog(event, "AlertConfirmerChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMachServiceManagerAlertRemovedIterator is returned from FilterAlertRemoved and is used to iterate over the raw logs and unpacked data for AlertRemoved events raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerAlertRemovedIterator struct {
	Event *ContractMachServiceManagerAlertRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMachServiceManagerAlertRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMachServiceManagerAlertRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMachServiceManagerAlertRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMachServiceManagerAlertRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMachServiceManagerAlertRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMachServiceManagerAlertRemoved represents a AlertRemoved event raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerAlertRemoved struct {
	BlockNumber *big.Int
	Sender      common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterAlertRemoved is a free log retrieval operation binding the contract event 0xdc6896c6a17d008fe8c0bae5706df7a5456ed682e92595cd405f05fc908e20a0.
//
// Solidity: event AlertRemoved(uint256 blockNumber, address sender)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) FilterAlertRemoved(opts *bind.FilterOpts) (*ContractMachServiceManagerAlertRemovedIterator, error) {

	logs, sub, err := _ContractMachServiceManager.contract.FilterLogs(opts, "AlertRemoved")
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManagerAlertRemovedIterator{contract: _ContractMachServiceManager.contract, event: "AlertRemoved", logs: logs, sub: sub}, nil
}

// WatchAlertRemoved is a free log subscription operation binding the contract event 0xdc6896c6a17d008fe8c0bae5706df7a5456ed682e92595cd405f05fc908e20a0.
//
// Solidity: event AlertRemoved(uint256 blockNumber, address sender)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) WatchAlertRemoved(opts *bind.WatchOpts, sink chan<- *ContractMachServiceManagerAlertRemoved) (event.Subscription, error) {

	logs, sub, err := _ContractMachServiceManager.contract.WatchLogs(opts, "AlertRemoved")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMachServiceManagerAlertRemoved)
				if err := _ContractMachServiceManager.contract.UnpackLog(event, "AlertRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAlertRemoved is a log parse operation binding the contract event 0xdc6896c6a17d008fe8c0bae5706df7a5456ed682e92595cd405f05fc908e20a0.
//
// Solidity: event AlertRemoved(uint256 blockNumber, address sender)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) ParseAlertRemoved(log types.Log) (*ContractMachServiceManagerAlertRemoved, error) {
	event := new(ContractMachServiceManagerAlertRemoved)
	if err := _ContractMachServiceManager.contract.UnpackLog(event, "AlertRemoved", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMachServiceManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerInitializedIterator struct {
	Event *ContractMachServiceManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMachServiceManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMachServiceManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMachServiceManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMachServiceManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMachServiceManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMachServiceManagerInitialized represents a Initialized event raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractMachServiceManagerInitializedIterator, error) {

	logs, sub, err := _ContractMachServiceManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManagerInitializedIterator{contract: _ContractMachServiceManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractMachServiceManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractMachServiceManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMachServiceManagerInitialized)
				if err := _ContractMachServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) ParseInitialized(log types.Log) (*ContractMachServiceManagerInitialized, error) {
	event := new(ContractMachServiceManagerInitialized)
	if err := _ContractMachServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMachServiceManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerOwnershipTransferredIterator struct {
	Event *ContractMachServiceManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMachServiceManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMachServiceManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMachServiceManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMachServiceManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMachServiceManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMachServiceManagerOwnershipTransferred represents a OwnershipTransferred event raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractMachServiceManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractMachServiceManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManagerOwnershipTransferredIterator{contract: _ContractMachServiceManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractMachServiceManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractMachServiceManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMachServiceManagerOwnershipTransferred)
				if err := _ContractMachServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) ParseOwnershipTransferred(log types.Log) (*ContractMachServiceManagerOwnershipTransferred, error) {
	event := new(ContractMachServiceManagerOwnershipTransferred)
	if err := _ContractMachServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMachServiceManagerPausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerPausedIterator struct {
	Event *ContractMachServiceManagerPaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMachServiceManagerPausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMachServiceManagerPaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMachServiceManagerPaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMachServiceManagerPausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMachServiceManagerPausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMachServiceManagerPaused represents a Paused event raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerPaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) FilterPaused(opts *bind.FilterOpts, account []common.Address) (*ContractMachServiceManagerPausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractMachServiceManager.contract.FilterLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManagerPausedIterator{contract: _ContractMachServiceManager.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *ContractMachServiceManagerPaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractMachServiceManager.contract.WatchLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMachServiceManagerPaused)
				if err := _ContractMachServiceManager.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) ParsePaused(log types.Log) (*ContractMachServiceManagerPaused, error) {
	event := new(ContractMachServiceManagerPaused)
	if err := _ContractMachServiceManager.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMachServiceManagerPauserRegistrySetIterator is returned from FilterPauserRegistrySet and is used to iterate over the raw logs and unpacked data for PauserRegistrySet events raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerPauserRegistrySetIterator struct {
	Event *ContractMachServiceManagerPauserRegistrySet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMachServiceManagerPauserRegistrySetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMachServiceManagerPauserRegistrySet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMachServiceManagerPauserRegistrySet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMachServiceManagerPauserRegistrySetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMachServiceManagerPauserRegistrySetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMachServiceManagerPauserRegistrySet represents a PauserRegistrySet event raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerPauserRegistrySet struct {
	PauserRegistry    common.Address
	NewPauserRegistry common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterPauserRegistrySet is a free log retrieval operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) FilterPauserRegistrySet(opts *bind.FilterOpts) (*ContractMachServiceManagerPauserRegistrySetIterator, error) {

	logs, sub, err := _ContractMachServiceManager.contract.FilterLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManagerPauserRegistrySetIterator{contract: _ContractMachServiceManager.contract, event: "PauserRegistrySet", logs: logs, sub: sub}, nil
}

// WatchPauserRegistrySet is a free log subscription operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) WatchPauserRegistrySet(opts *bind.WatchOpts, sink chan<- *ContractMachServiceManagerPauserRegistrySet) (event.Subscription, error) {

	logs, sub, err := _ContractMachServiceManager.contract.WatchLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMachServiceManagerPauserRegistrySet)
				if err := _ContractMachServiceManager.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePauserRegistrySet is a log parse operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) ParsePauserRegistrySet(log types.Log) (*ContractMachServiceManagerPauserRegistrySet, error) {
	event := new(ContractMachServiceManagerPauserRegistrySet)
	if err := _ContractMachServiceManager.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMachServiceManagerStaleStakesForbiddenUpdateIterator is returned from FilterStaleStakesForbiddenUpdate and is used to iterate over the raw logs and unpacked data for StaleStakesForbiddenUpdate events raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerStaleStakesForbiddenUpdateIterator struct {
	Event *ContractMachServiceManagerStaleStakesForbiddenUpdate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMachServiceManagerStaleStakesForbiddenUpdateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMachServiceManagerStaleStakesForbiddenUpdate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMachServiceManagerStaleStakesForbiddenUpdate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMachServiceManagerStaleStakesForbiddenUpdateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMachServiceManagerStaleStakesForbiddenUpdateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMachServiceManagerStaleStakesForbiddenUpdate represents a StaleStakesForbiddenUpdate event raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerStaleStakesForbiddenUpdate struct {
	Value bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterStaleStakesForbiddenUpdate is a free log retrieval operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) FilterStaleStakesForbiddenUpdate(opts *bind.FilterOpts) (*ContractMachServiceManagerStaleStakesForbiddenUpdateIterator, error) {

	logs, sub, err := _ContractMachServiceManager.contract.FilterLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManagerStaleStakesForbiddenUpdateIterator{contract: _ContractMachServiceManager.contract, event: "StaleStakesForbiddenUpdate", logs: logs, sub: sub}, nil
}

// WatchStaleStakesForbiddenUpdate is a free log subscription operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) WatchStaleStakesForbiddenUpdate(opts *bind.WatchOpts, sink chan<- *ContractMachServiceManagerStaleStakesForbiddenUpdate) (event.Subscription, error) {

	logs, sub, err := _ContractMachServiceManager.contract.WatchLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMachServiceManagerStaleStakesForbiddenUpdate)
				if err := _ContractMachServiceManager.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStaleStakesForbiddenUpdate is a log parse operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) ParseStaleStakesForbiddenUpdate(log types.Log) (*ContractMachServiceManagerStaleStakesForbiddenUpdate, error) {
	event := new(ContractMachServiceManagerStaleStakesForbiddenUpdate)
	if err := _ContractMachServiceManager.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMachServiceManagerUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerUnpausedIterator struct {
	Event *ContractMachServiceManagerUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMachServiceManagerUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMachServiceManagerUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMachServiceManagerUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMachServiceManagerUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMachServiceManagerUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMachServiceManagerUnpaused represents a Unpaused event raised by the ContractMachServiceManager contract.
type ContractMachServiceManagerUnpaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) FilterUnpaused(opts *bind.FilterOpts, account []common.Address) (*ContractMachServiceManagerUnpausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractMachServiceManager.contract.FilterLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractMachServiceManagerUnpausedIterator{contract: _ContractMachServiceManager.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *ContractMachServiceManagerUnpaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractMachServiceManager.contract.WatchLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMachServiceManagerUnpaused)
				if err := _ContractMachServiceManager.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractMachServiceManager *ContractMachServiceManagerFilterer) ParseUnpaused(log types.Log) (*ContractMachServiceManagerUnpaused, error) {
	event := new(ContractMachServiceManagerUnpaused)
	if err := _ContractMachServiceManager.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
